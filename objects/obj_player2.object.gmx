<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//character properties
maxHealth = 5;
currHeath = maxHealth;

maxMovSpeed = 120; //terminal velocity
currSpeed = maxMovSpeed;
xDir = 0;
yDir = 0;

attackSpeed = 1;

walkedDirLR = 1;
walkedDirUD = 1; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if D is pressed returns 1 if not returns 0
yDir = (keyboard_check(ord("S")) || keyboard_check(vk_down)) - (keyboard_check(ord("W")) || keyboard_check(vk_up));
xDir = (keyboard_check(ord("D")) || keyboard_check(vk_right)) - (keyboard_check(ord("A")) || keyboard_check(vk_left));

var dir = point_direction(0,0, xDir, yDir);

if( xDir != 0 || yDir != 0){
    x += lengthdir_x(self.currSpeed*delta_time/1000000, dir);
    y += lengthdir_y(self.currSpeed*delta_time/1000000, dir);

    if( yDir &lt; 0){
        walkedDirUD = -1;
    } else if(yDir &gt; 0){
        walkedDirUD = 1;
    }
    
    if( xDir &gt; 0){
        walkedDirLR = 1;
    } else if(xDir &lt; 0){
        walkedDirLR = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//control animations

if(xDir == 0 &amp;&amp; yDir == 0 &amp;&amp; walkedDirUD &gt;0){
    image_speed = 0.1;
    sprite_index = spr_player_idle;
}

if(xDir == 0 &amp;&amp; yDir == 0 &amp;&amp; walkedDirUD &lt;0){
    image_speed = 0.1;
    sprite_index = spr_player_idleBack;
}

if(xDir &gt; 0  &amp;&amp; walkedDirLR &gt;0){
    image_speed = 0.5;
    image_xscale = 1;
    sprite_index = spr_player_run;
}

if(xDir &lt; 0 &amp;&amp; walkedDirLR &lt;0){
    image_speed = 0.5;
    image_xscale = -1;
    sprite_index = spr_player_run;
}

if( yDir &lt; 0 &amp;&amp; walkedDirUD &lt;0){
    image_speed = 0.5;
    sprite_index = spr_player_runBack;
}

if(yDir &gt; 0 &amp;&amp; walkedDirUD &gt;0){
    image_speed = 0.5;
    sprite_index = spr_player_runFront;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
